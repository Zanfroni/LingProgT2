/*
 * generated by Xtext 2.14.0
 */
package org.example.domainmodel.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.example.domainmodel.domainmodel.Domainmodel
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest {
	@Inject
	ParseHelper<Domainmodel> parseHelper
	
	// simpleTest: RESULTADO ESPERADO:

	// CREATE TABLE pessoa (
	//	nome varchar PRIMARY KEY
	// );

	@Test
	def void simpleTest() {
		val result = parseHelper.parse('''
			datatype varchar
			
			entity pessoa{
				NOT NULL nome : varchar PRIMARY KEY
			}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	// table1Test: RESULTADO ESPERADO:

	// CREATE TABLE pessoa (
	// 	nome varchar PRIMARY KEY,
	// 	integer integer NULL
	// );

	@Test
	def void table1Test() {
		val result = parseHelper.parse('''
			datatype varchar
			datatype integer
			
			entity pessoa{
				NOT NULL nome : varchar PRIMARY KEY
				NULL idade : integer
			}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}

	// CREATE TABLE turma (
	// 	id integer PRIMARY KEY
	// );
	// 
	// CREATE TABLE pessoa (
	// 	nome varchar PRIMARY KEY,
	//	idade integer NULL,
	// ) inherits (turma);
	
	@Test
	def void inheritanceTest() {
		val result = parseHelper.parse('''
			datatype varchar
			datatype integer
			
			entity turma{
				NOT NULL id : integer PRIMARY KEY
			}
			
			entity pessoa extends turma{
				NOT NULL nome : varchar PRIMARY KEY
				NULL idade : integer
			}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	// CREATE TABLE turma (
	// 	id integer PRIMARY KEY,
	//	data date NULL
	// );
	// 
	// CREATE TABLE pessoa (
	// 	nome varchar PRIMARY KEY,
	//	idade integer NULL,
	//	cadastro varchar FOREIGN KEY
	// ) inherits (turma);

	@Test
	def void advancedExampleTest() {
		val result = parseHelper.parse('''
			datatype varchar
			datatype integer
			datatype date
			
			entity turma{
				NOT NULL id : integer PRIMARY KEY
				NULL data : date
			}
			
			entity pessoa extends turma{
				NOT NULL nome : varchar PRIMARY KEY
				NULL idade : integer
				NOT NULL cadastro : varchar FOREIGN KEY
			}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}